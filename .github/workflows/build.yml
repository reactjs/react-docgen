name: CI

on:
  push:
    branches:
      - main
      - renovate/**
  pull_request:

permissions: {}

env:
  NODE_VERSION: 22

jobs:
  tests:
    strategy:
      matrix:
        node: ['20.9.0', '22', '23']
        os: ['ubuntu']
        include:
          - os: macos
            node: '22'
          - os: windows
            node: '22'

    name: Tests (Node.js v${{ matrix.node }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Unit tests with coverage
        if: '${{ matrix.node == env.NODE_VERSION }}'
        run: pnpm test -- --coverage

      - name: Unit tests
        if: '${{ matrix.node != env.NODE_VERSION }}'
        run: pnpm test

      - name: Upload coverage
        if: '${{ matrix.node == env.NODE_VERSION }}'
        continue-on-error: true
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          flag-name: test-${{ matrix.os }}

  finish:
    needs: tests
    if: ${{ always() }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Close parallel build
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

  website:
    name: Website test build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm exec nx run @react-docgen-internal/website:build
